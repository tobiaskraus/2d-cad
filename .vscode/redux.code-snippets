{
    // Place your 2d-cad workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
    // Placeholders with the same ids are connected.
    // Example:
    // "Print to console": {
    // 	"scope": "javascript,typescript",
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
    "Slice file": {
        "scope": "typescript",
        "prefix": "slicefile",
        "body": [
            "import { createSlice, PayloadAction } from '@reduxjs/toolkit';",
            "",
            "export interface ${1/(.)/${1:/upcase}/}State {",
            "    $2;",
            "}",
            "",
            "export const initialState: ${1/(.)/${1:/upcase}/}State = {",
            "",
            "};",
            "",
            "export const ${1/(.)/${1:/downcase}/}Slice = createSlice({",
            "    name: '${1/(.)/${1:/downcase}/}',",
            "    initialState,",
            "    reducers: {",
            "        $3,",
            "    }",
            "});",
            "",
            "export const { $4 } = ${1/(.)/${1:/downcase}/}Slice.actions;",
            "",
            "export default ${1/(.)/${1:/downcase}/}Slice.reducer;",
            ""
        ],
        "description": "boilerplate for a new Redux Toolkik Slice file"
    }
}
